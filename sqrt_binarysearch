//case-1:using O(n) complexity.

int sqrt(int num)
{
  int i=1;
  while(num/i>=i)
  {
  }
  return i-1;
}

// case-2: using binary search O(logn)
int mySqrt(int x) {
        int l=1,h=x,mid;
        if(x==0)
            {
            return 0;
            }
        while(l<=h)
            {
              mid=l+((h-l)>>1);
            if((x/mid)==mid)
                {
                return mid;
                }
            if((x/mid)>mid)
                {
                l=mid+1;
                }
            else if((x/mid)<mid)
                {
                h=mid-1;
                }
            }
        if(l>mid)
            {
             return mid;
            }
        else
            {
            return mid-1;
            }
       
        
    }
